version: '3.9'

services:
  nginx:
    container_name: nginx
    build: ./frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - auth-server
      - kms
      - db

  backend:
    container_name: backend
    build: ./backend
    expose:
      - "8080"
    depends_on:
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=${BACKEND_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${BACKEND_USER}
      - SPRING_DATASOURCE_PASSWORD=${BACKEND_PASSWORD}

  auth-server:
    container_name: auth-server
    build: ./auth
    expose:
      - "8081"
    depends_on:
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=${AUTH_DB_URL}
      - SPRING_DATASOURCE_USERNAME=${AUTH_USER}
      - SPRING_DATASOURCE_PASSWORD=${AUTH_PASSWORD}

  kms:
    container_name: kms
    build: ./kms
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DB_URL=${KMS_DB_URL}
      - DB_USERNAME=${KMS_USER}
      - DB_PASSWORD=${KMS_PASSWORD}

  db:
    image: postgres:15
    container_name: db
    expose:
      - "5432"
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  db-data:
